plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.dabeen'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	testCompile 'junit:junit:4.12'
   	compile "mysql:mysql-connector-java"
	compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1"
    compile "org.mybatis:mybatis-spring:1.3.1"
    compile "org.mybatis:mybatis:3.4.5"
	implementation 'org.springframework.boot:spring-boot-starter-security'
   	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
   	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compileOnly 'org.projectlombok:lombok'
   	developmentOnly 'org.springframework.boot:spring-boot-devtools'
   	annotationProcessor 'org.projectlombok:lombok'
   	testImplementation('org.springframework.boot:spring-boot-starter-test') {
   	   exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
   	}
	// JWT 사용을 위함
	implementation 'io.jsonwebtoken:jjwt-api:0.10.7'
	runtime 'io.jsonwebtoken:jjwt-impl:0.10.7'
	runtime 'io.jsonwebtoken:jjwt-jackson:0.10.7'
	// https://mvnrepository.com/artifact/org.springframework/spring-context-support
	compile group: 'org.springframework', name: 'spring-context-support', version: '3.2.2.RELEASE'
}
<<<<<<< HEAD

test {
	useJUnitPlatform()
}

=======
>>>>>>> backend
